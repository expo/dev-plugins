{"version":3,"file":"useAsyncStorageDevTools.js","sourceRoot":"","sources":["../src/useAsyncStorageDevTools.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,2CAA2C,CAAC;AACrE,OAAO,EAAE,uBAAuB,EAA0B,MAAM,eAAe,CAAC;AAChF,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAGlC,MAAM,UAAU,uBAAuB;IACrC,MAAM,MAAM,GAAG,uBAAuB,CAAC,eAAe,CAAC,CAAC;IAExD,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;IACtC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEb,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,EAAE,GAAG,CACT,KAAa,EACb,QAAoE,EACpE,EAAE;YACF,MAAM,EAAE,kBAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,MAAwC,EAAE,EAAE;gBACnF,IAAI;oBACF,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAEtC,MAAM,EAAE,WAAW,CAAC,OAAO,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;iBACjD;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI;wBACF,MAAM,EAAE,WAAW,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;qBACzC;oBAAC,MAAM,GAAE;iBACX;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,MAAM,aAAa,GAAwB,EAAE,CAAC;QAC9C,aAAa,CAAC,IAAI,CAChB,EAAE,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;YACtB,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,UAAU,EAAE,CAAC;YAC7C,OAAO,MAAM,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC,CACH,CAAC;QAEF,aAAa,CAAC,IAAI,CAChB,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;YACnC,IAAI,GAAG,KAAK,SAAS,IAAI,KAAK,KAAK,SAAS;gBAAE,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;;gBACjF,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;QAChC,CAAC,CAAC,CACH,CAAC;QAEF,aAAa,CAAC,IAAI,CAChB,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE;YACvB,IAAI,GAAG,KAAK,SAAS;gBAAE,OAAO,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;;gBACtD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;QAChC,CAAC,CAAC,CACH,CAAC;QAEF,OAAO,GAAG,EAAE;YACV,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE;gBACxC,YAAY,EAAE,MAAM,EAAE,CAAC;aACxB;QACH,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACf,CAAC","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDevToolsPluginClient, type EventSubscription } from 'expo/devtools';\nimport { useEffect } from 'react';\nimport { Method } from '../methods';\n\nexport function useAsyncStorageDevTools() {\n  const client = useDevToolsPluginClient('async-storage');\n\n  useEffect(() => {\n    console.log(client?.connectionInfo);\n  }, [client]);\n\n  useEffect(() => {\n    const on = (\n      event: Method,\n      listener: (params: { key?: string; value?: string }) => Promise<any>\n    ) => {\n      client?.addMessageListener(event, async (params: { key?: string; value?: string }) => {\n        try {\n          const result = await listener(params);\n\n          client?.sendMessage(`ack:${event}`, { result });\n        } catch (error) {\n          try {\n            client?.sendMessage('error', { error });\n          } catch {}\n        }\n      });\n    };\n\n    const subscriptions: EventSubscription[] = [];\n    subscriptions.push(\n      on('getAll', async () => {\n        const keys = await AsyncStorage.getAllKeys();\n        return await AsyncStorage.multiGet(keys);\n      })\n    );\n\n    subscriptions.push(\n      on('set', ({ key, value }) => {\n        console.log('set', { key, value });\n        if (key !== undefined && value !== undefined) return AsyncStorage.setItem(key, value);\n        else return Promise.resolve();\n      })\n    );\n\n    subscriptions.push(\n      on('remove', ({ key }) => {\n        if (key !== undefined) return AsyncStorage.removeItem(key);\n        else return Promise.resolve();\n      })\n    );\n\n    return () => {\n      for (const subscription of subscriptions) {\n        subscription?.remove();\n      }\n    };\n  }, [client]);\n}\n"]}