{"version":3,"file":"useAsyncStorageDevTools.js","sourceRoot":"","sources":["../src/useAsyncStorageDevTools.ts"],"names":[],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDevToolsPluginClient, type EventSubscription } from 'expo/devtools';\nimport { useCallback, useEffect } from 'react';\n\nimport { Method } from '../methods';\n\n/**\n * This hook registers a devtools plugin for AsyncStorage.\n *\n * The plugin provides you with the ability to view, add, edit, and remove AsyncStorage entries.\n *\n * @param props\n * @param props.errorHandler - A function that will be called with any errors that occur while communicating\n * with the devtools, if not provided errors will be ignored. Setting this is highly recommended.\n */\nexport function useAsyncStorageDevTools({\n  errorHandler,\n}: {\n  errorHandler?: (error: Error) => void;\n} = {}) {\n  const client = useDevToolsPluginClient('async-storage');\n\n  const handleError = useCallback(\n    (error: unknown) => {\n      if (error instanceof Error) {\n        errorHandler?.(error);\n      } else {\n        errorHandler?.(new Error(`Unknown error: ${String(error)}`));\n      }\n    },\n    [errorHandler]\n  );\n\n  useEffect(() => {\n    const on = (\n      event: Method,\n      listener: (params: { key?: string; value?: string }) => Promise<any>\n    ) =>\n      client?.addMessageListener(event, async (params: { key?: string; value?: string }) => {\n        try {\n          const result = await listener(params);\n\n          client?.sendMessage(`ack:${event}`, { result });\n        } catch (error) {\n          try {\n            client?.sendMessage('error', { error });\n            handleError(error);\n          } catch (e) {\n            handleError(e);\n          }\n        }\n      });\n\n    const subscriptions: (EventSubscription | undefined)[] = [];\n\n    try {\n      subscriptions.push(\n        on('getAll', async () => {\n          const keys = await AsyncStorage.getAllKeys();\n          return await AsyncStorage.multiGet(keys);\n        })\n      );\n    } catch (e) {\n      handleError(e);\n    }\n\n    try {\n      subscriptions.push(\n        on('set', ({ key, value }) => {\n          if (key !== undefined && value !== undefined) return AsyncStorage.setItem(key, value);\n          else return Promise.resolve();\n        })\n      );\n    } catch (e) {\n      handleError(e);\n    }\n\n    try {\n      subscriptions.push(\n        on('remove', ({ key }) => {\n          if (key !== undefined) return AsyncStorage.removeItem(key);\n          else return Promise.resolve();\n        })\n      );\n    } catch (e) {\n      handleError(e);\n    }\n\n    return () => {\n      for (const subscription of subscriptions) {\n        try {\n          subscription?.remove();\n        } catch (e) {\n          handleError(e);\n        }\n      }\n    };\n  }, [client]);\n}\n"]}