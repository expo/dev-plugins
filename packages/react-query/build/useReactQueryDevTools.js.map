{"version":3,"file":"useReactQueryDevTools.js","sourceRoot":"","sources":["../src/useReactQueryDevTools.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAC;AAEpC,OAAO,EAAE,uBAAuB,EAA0B,MAAM,eAAe,CAAC;AAChF,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,MAAM,UAAU,qBAAqB,CAAC,WAAwB;IAC5D,MAAM,MAAM,GAAG,uBAAuB,CAAC,aAAa,CAAC,CAAC;IACtD,MAAM,UAAU,GAAG,WAAW,CAAC,aAAa,EAAE,CAAC;IAE/C,IAAI,WAAqC,CAAC;IAE1C,SAAS,UAAU;QACjB,OAAO,UAAU,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IAED,SAAS,cAAc,CAAC,SAAiB;QACvC,OAAO,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC;IACrE,CAAC;IAED,SAAS,oBAAoB;QAC3B,MAAM,OAAO,GAAG,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QAEnE,MAAM,iBAAiB,GAAG;YACxB,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC;SAC5B,CAAC;QAEF,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAED,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,aAAa,GAAwB,EAAE,CAAC;QAE9C,aAAa,CAAC,IAAI,CAChB,MAAM,EAAE,kBAAkB,CAAC,cAAc,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE;YAC3D,cAAc,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC;QACrC,CAAC,CAAC,CACH,CAAC;QAEF,aAAa,CAAC,IAAI,CAChB,MAAM,EAAE,kBAAkB,CAAC,aAAa,EAAE,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE;YAC1D,MAAM,KAAK,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;YACxC,IAAI,KAAK,EAAE;gBACT,WAAW,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;aACtE;QACH,CAAC,CAAC,CACH,CAAC;QAEF,uBAAuB;QACvB,MAAM,EAAE,WAAW,CAAC,SAAS,EAAE,oBAAoB,EAAE,CAAC,CAAC;QAEvD;;;WAGG;QACH,MAAM,gBAAgB,GAAG,CAAC,KAA4B,EAAE,EAAE;YACxD,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;YACxB,MAAM,EAAE,WAAW,CAAC,iBAAiB,EAAE;gBACrC,UAAU,EAAE,SAAS,CAAC,EAAE,GAAG,KAAK,EAAE,KAAK,EAAE,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC;aAClE,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,2DAA2D;QAC3D,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAErD,OAAO,GAAG,EAAE;YACV,IAAI,WAAW,EAAE;gBACf,WAAW,EAAE,CAAC;gBACd,WAAW,GAAG,SAAS,CAAC;aACzB;YACD,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE;gBACxC,YAAY,EAAE,MAAM,EAAE,CAAC;aACxB;QACH,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACf,CAAC;AAED,SAAS,cAAc,CAAC,KAAY;IAClC,OAAO;QACL,GAAG,KAAK;QACR,aAAa,EAAE,KAAK,CAAC,QAAQ,EAAE;QAC/B,YAAY,EAAE,KAAK,CAAC,OAAO,EAAE;QAC7B,mBAAmB,EAAE,KAAK,CAAC,iBAAiB,EAAE;KAC/C,CAAC;AACJ,CAAC","sourcesContent":["import { stringify } from 'flatted';\nimport type { Query, QueryCacheNotifyEvent, QueryClient } from '@tanstack/react-query';\nimport { useDevToolsPluginClient, type EventSubscription } from 'expo/devtools';\nimport { useEffect } from 'react';\n\nexport function useReactQueryDevTools(queryClient: QueryClient) {\n  const client = useDevToolsPluginClient('react-query');\n  const queryCache = queryClient.getQueryCache();\n\n  let unsubscribe: (() => void) | undefined;\n\n  function getQueries() {\n    return queryCache.getAll();\n  }\n\n  function getQueryByHash(queryHash: string): Query | undefined {\n    return getQueries().find((query) => query.queryHash === queryHash);\n  }\n\n  function getSerializedQueries() {\n    const queries = getQueries().map((query) => serializeQuery(query));\n\n    const serializedQueries = {\n      queries: stringify(queries),\n    };\n\n    return serializedQueries;\n  }\n\n  useEffect(() => {\n    const subscriptions: EventSubscription[] = [];\n\n    subscriptions.push(\n      client?.addMessageListener('queryRefetch', ({ queryHash }) => {\n        getQueryByHash(queryHash)?.fetch();\n      })\n    );\n\n    subscriptions.push(\n      client?.addMessageListener('queryRemove', ({ queryHash }) => {\n        const query = getQueryByHash(queryHash);\n        if (query) {\n          queryClient.removeQueries({ queryKey: query.queryKey, exact: true });\n        }\n      })\n    );\n\n    // send initial queries\n    client?.sendMessage('queries', getSerializedQueries());\n\n    /**\n     * handles QueryCacheNotifyEvent\n     * @param event - QueryCacheNotifyEvent, but RQ doesn't have it exported\n     */\n    const handleCacheEvent = (event: QueryCacheNotifyEvent) => {\n      const { query } = event;\n      client?.sendMessage('queryCacheEvent', {\n        cacheEvent: stringify({ ...event, query: serializeQuery(query) }),\n      });\n    };\n\n    // Subscribe to QueryCacheNotifyEvent and send updates only\n    unsubscribe = queryCache.subscribe(handleCacheEvent);\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n        unsubscribe = undefined;\n      }\n      for (const subscription of subscriptions) {\n        subscription?.remove();\n      }\n    };\n  }, [client]);\n}\n\nfunction serializeQuery(query: Query) {\n  return {\n    ...query,\n    _ext_isActive: query.isActive(),\n    _ext_isStale: query.isStale(),\n    _ext_observersCount: query.getObserversCount(),\n  };\n}\n"]}